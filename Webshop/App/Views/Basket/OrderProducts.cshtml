@using Persistence.Model
@using App.Models
@model AnonymShippingInfos

@{
    ViewBag.Title = "Index";
}
@{
    double sum = 0;

    foreach (KeyValuePair<Product, int> item in ViewBag.ProductList)
    {
        sum += item.Key.Price * item.Value;
    }

    int SUM = (int)sum;



}

@{
    string userID = HelperMethods.GetUserID(User, Session);
}

<h2>Shipping information</h2>
<div id="formOuterBox">
    <div class="formInnerBox">
        <section id="form">
            @using (Html.BeginForm("Index", "Order"))
            {
                @Html.AntiForgeryToken()


            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="shippingDetails">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="shippingDetails">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="shippingDetails">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })

                    <div>
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (!User.Identity.IsAuthenticated)
                {
                    <div>
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                @if (User.IsInRole("customer"))
                {
                    <br />
                    <div>
                        Choose Shipping Details
                        <div>
                            @Html.DropDownList("shippingAddress",
                                new SelectList(ViewBag.Shippings),
                                "Select Address",
                                new { @class = "form-control" , @onchange = "disableInputs()" })
                        </div>
                    </div>

                    <br />
                    <div class="shippingDetails">
                        @Html.LabelFor(model => model.SaveShipping, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.SaveShipping)
                                @Html.ValidationMessageFor(model => model.SaveShipping, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                }
                
                <div id="backToForm" style="display:none;">
                    <div>
                        <input type="button" value="GIVE NEW SHIPPING DETAILS" onclick="location.href='@Url.Action("OrderProducts", "Basket",  new { id = @userID })'" />
                    </div>
                </div>
                <br />
                <div>
                    <div>
                        <input id="formInputButton" type="submit" value="Submit order" />
                    </div>
                </div>

                @Html.HiddenFor(x => x.OrderID)
                @Html.HiddenFor(x => x.DateOfOrder)
            </div>
            }
        </section>
    </div>
</div>

<table id="orderedProducts">
    <tr>
        <th>
            Name
        </th>
        <th>
            Quantity
        </th>
        <th>
            Unit Price
        </th>
    </tr>

    @foreach (KeyValuePair<Product, int> item in ViewBag.ProductList)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Key.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Value)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Key.Price)
            </td>
        </tr>
    }
    <tr>
        <td></td>
        <td></td>
        <td>@SUM $</td>
    </tr>
    <tr>
        <td colspan="3">
            <input type="button" value="CONTINUE SHOPPING" style="background-color:#000000; color:#ffffff;" onclick="location.href='@Url.Action("Index", "Product")'" />
        </td>
    </tr>
</table>