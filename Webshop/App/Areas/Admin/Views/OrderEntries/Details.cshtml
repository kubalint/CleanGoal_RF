@using Persistence.Model;
@using App.Models;
@using Persistence
@model List<OrderItem>

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>


<table class="table">
    <tr>
        <th>
            Product Name
        </th>
        <th>
            Quantity
        </th>
        <th>
            Price
        </th>
        <th>
            Status
        </th>
        <th></th>
    </tr>
   

    @foreach (var item in Model)
     {

         if (item.Status == OrderStatus.Deleted)
         {
             continue;
         }

         bool modifyable = item.Status == OrderStatus.Active;

         string productName = "";
         using (StoreContext db = new StoreContext())
         {
             Product product = db.Products.Where(x => x.ID.ToString() == item.ProductID).FirstOrDefault();
             productName = product.Name;
         }
         <tr>
             <td>
                 @productName
             </td>

             <td>
                 @Html.DisplayFor(modelItem => item.Quantity)
                 @if (modifyable)
                 {
                     @Html.ActionLink("-", "DecreaseQuantity", new { id = item.ProductID, orderId = @ViewBag.orderID })
                     @Html.ActionLink("+", "IncreaseQuantity", new { id = item.ProductID, orderId = @ViewBag.orderID })

                 }
             </td>
             <td>
                 @Html.DisplayFor(modelItem => item.Price)
             </td>

             <td>
                 @Html.DisplayFor(modelItem => item.Status)
             </td>
             <td>
                 @Html.ActionLink("Delete", "DeleteEntry", new { id = item.ProductID, orderId = @ViewBag.orderID })
             </td>
         </tr>
     }
    
    

</table>
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
